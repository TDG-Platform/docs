# Similarity: Automatic Image Anomaly Detection System (aiads)

The algorithm takes a candidate image, and a historical set of images which intersect the candidate and precede it in time, and produces a heat map image of the same dimensions as the candidate, which marks anomalous regions as red and non-anomalous regions as blue or transparent.
Both candidates and historical images must be AComp and DRA corrected, as well as being pan-sharpened. Lower off-nadir angles are preferred, but images with significant off-nadir angles have been successfully processed.
This File documents the use of the GBDX version of AIADS

The Task takes as its input, a directory which is output by the AOP_strip_processor
task (or an equivalent directory structure) and outputs an image file which is a
heat map of anomalies in a "candidate" image.

taskname can be run with Python using [gbdxtools](https://github.com/DigitalGlobe/gbdxtools) or through the [GBDX Web Application](https://gbdx.geobigdata.io/materials/).  

### Table of Contents
 * [Quickstart](#quickstart) - Get started!
 * [Inputs](#inputs) - Required and optional task inputs.
 * [Outputs](#outputs) - Task outputs and output structure.
 * [Advanced](#advanced) - Additional information for advanced users.
 * [Runtime](#runtime) - Example estimate of task runtime.
 * [Issues](#issues) - Current or past known issues.
 * [Background](#background) - Background information.
 * [Contact](#contact) - Contact information.

### Quickstart

Quick start example.

```python
# Quickstart example for taskname.  

from gbdxtools import Interface
gbdx = Interface()

#Edit the following line to reflect a specific path to an image
raster = 's3://gbd-customer-data/CustomerAccount#/PathToImage/'
taskname = gbdx.Task('taskname', raster=raster)

workflow = gbdx.Workflow([taskname])  
#Edit the following line(s) to reflect specific folder(s) for the output file (example location provided)
workflow.savedata(taskname.outputs.data, location='taskname')
workflow.execute()

print workflow.id
print workflow.status
```

### Inputs

The following table lists all taskname inputs.
Mandatory (optional) settings are listed as Required = True (Required = False).

  Name  |  Required  |  Default  |  Valid Values  |  Description  
--------|:----------:|-----------|----------------|---------------
inputshere


### Outputs

The following table lists all taskname outputs.
Mandatory (optional) settings are listed as Required = True (Required = False).

  Name  |  Required  |  Default  |  Valid Values  |  Description
--------|:----------:|-----------|----------------|---------------
outputshere


**Output structure**

Explain output structure via example.


### Advanced
Include example(s) with complicated parameter settings and/or example(s) where
taskname is used as part of a workflow involving other GBDX tasks.

### Runtime

The following table lists all applicable runtime outputs. (This section will be completed the Algorithm Curation team)
For details on the methods of testing the runtimes of the task visit the following link:(INSERT link to GBDX U page here)

  Sensor Name  | Total Pixels |  Total Area (k2)  |  Time(secs)  |  Time/Area k2
--------|:----------:|-----------|----------------|---------------
QB | 41,551,668 | 312.07 |  |  
WV01| 1,028,100,320 |351.72 | |
WV02|35,872,942|329.87| |
WV03|35,371,971|196.27| |
GE| 57,498,000|332.97| |

### Issues
List known past/current issues with taskname (e.g., version x does not ingest vrt files).


### Background
For background on the development and implementation of taskname see [here](Insert link here).


### Contact
List contact information for technical support.

